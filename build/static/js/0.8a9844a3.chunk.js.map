{"version":3,"sources":["components/TicketInput/TicketInput.tsx","views/Lottery/components/TicketCard/BuyTicketModal.tsx","hooks/useTickets.ts","views/Home/components/CardValue.tsx","views/Home/components/CardVusdtValue.tsx","hooks/useGetLotteryHasDrawn.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","hooks/useTokenBalance.ts","utils/lotteryUtils.ts","hooks/useBuyLottery.ts","hooks/useAllowance.ts","hooks/useApproval.ts","views/Lottery/components/TicketCard/PurchaseWarningModal.tsx"],"names":["StyledSpacer","styled","div","props","theme","spacing","StyledTokenAdornmentWrapper","StyledMaxText","colors","primary","StyledTokenSymbol","span","TicketInput","max","symbol","availableSymbol","onChange","onSelectMax","value","t","useTranslation","alignItems","type","inputMode","min","placeholder","scale","onClick","num","toLocaleString","Tips","BuyTicketModal","amount","onDismiss","useState","val","setVal","pendingTx","setPendingTx","setRequestedBuy","fullBalance","useMemo","getBalanceNumber","maxTickets","parseInt","getFullDisplayBalance","LOTTERY_TICKET_PRICE","onMultiBuy","useMultiBuyLottery","maxNumber","useMaxNumber","handleBuy","useCallback","a","length","numbers","Array","apply","map","Math","floor","random","toString","console","error","handleSelectMax","Number","LOTTERY_MAX_NUMBER_OF_TICKETS","title","e","currentTarget","validity","valid","Announce","Final","ModalActions","width","variant","id","disabled","isInteger","useTotalRewards","BIG_ZERO","rewards","setRewards","lotteryContract","useLottery","fastRefresh","useRefresh","useEffect","isSubscribed","getTotalRewards","res","BigNumber","fetchBalance","then","useTotalClaim","claimAmount","setClaimAmount","claimLoading","setClaimLoading","account","useWeb3React","ticketsContract","useLotteryTicket","useLastUpdated","lastUpdated","setLastUpdated","getTotalClaim","claim","useWinningNumbers","winningNumbers","setWinningNumbers","getWinningNumbers","useMatchingRewardLength","matchingNumbers","setMatchingNumbers","getMatchingRewardLength","matchedNumbers","useTickets","lotteryNumber","tickets","setTickets","getTickets","CardValue","decimals","fontSize","lineHeight","prefix","bold","color","useCountUp","start","end","duration","separator","undefined","countUp","update","updateValue","useRef","current","style","CardVusdtValue","useGetLotteryHasDrawn","lotteryHasDrawn","setLotteryHasDrawn","getLotteryStatus","state","fetchLotteryStatus","size","Spacer","s","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","children","l","React","Children","toArray","child","i","FetchStatus","useTotalSupply","slowRefresh","totalSupply","setTotalSupply","wagyuContract","getWagyuContract","methods","call","supply","fetchTotalSupply","useWagyuPerBlock","wagyuPerBlock","setWagyuPerBlock","masterChefContract","getMasterchefContract","fetchWagyuPerBlock","useBurnedBalance","tokenAddress","balance","setBalance","web3","useWeb3","contract","getVls20Contract","balanceOf","useTokenBalance","NOT_FETCHED","SUCCESS","FAILED","fetchStatus","balanceState","setBalanceState","prev","multiCall","abi","calls","getWeb3NoAccount","multi","eth","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","newCalls","slice","calldata","toLowerCase","encodeFunctionData","aggregate","returnData","concat","index","decodeFunctionResult","multiBuy","price","numbersList","times","DEFAULT_TOKEN_DECIMAL","send","from","on","tx","transactionHash","customLotteryNum","issueIndex","getTicketsAmount","calls1","options","address","ticketAbi","tokenIds","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","eq","push","calls3","multiClaim","claimedStatus","unClaimedIds","filter","lotteryAbi","finalTokenIds","r","drawed","calls4","reduce","p","c","sum","getMax","getLotteryIssueIndex","matchNumber","historyAmount","toNumber","historyNumbers","useMultiClaimLottery","lotteryTicketContract","onMultiClaim","txHash","setMax","fetchMax","useLotteryAllowance","allowance","setAllowance","useWagyu","getLotteryAddress","fetchAllowance","useApproval","onPresentApprove","requestedApproval","setRequestedApproval","onApprove","useLotteryApprove","handleApprove","TicketsList","WarningModal"],"mappings":"+NAqCMA,EAAeC,IAAOC,IAAV,6CACP,SAACC,GAAD,OAAWA,EAAMC,MAAMC,QAAQ,MAGpCC,EAA8BL,IAAOC,IAAV,sEAK3BK,EAAgBN,IAAOC,IAAV,6KAER,SAACC,GAAD,OAAWA,EAAMC,MAAMI,OAAOC,WAQnCC,EAAoBT,IAAOU,KAAV,gEACZ,SAACR,GAAD,OAAWA,EAAMC,MAAMI,OAAOC,WAI1BG,EA/CgC,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,IAAKC,EAA4D,EAA5DA,OAAQC,EAAoD,EAApDA,gBAAiBC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MAC7FC,EAAMC,cAAND,EAER,OACE,qCACE,eAAC,IAAD,CAAME,WAAW,SAAjB,UACE,cAAC,IAAD,CAAOC,KAAK,SAASC,UAAU,UAAUC,IAAI,IAAIR,SAAUA,EAAUS,YAAY,IAAIP,MAAOA,IAC5F,eAACZ,EAAD,WACE,cAACN,EAAD,IACA,cAACU,EAAD,UAAoBI,IACpB,cAACd,EAAD,IACA,cAAC,IAAD,CAAQ0B,MAAM,KAAKC,QAASV,EAA5B,SACGE,EAAE,eAIT,cAACZ,EAAD,UACGY,EAAE,2BAA4B,CAAES,IAAKf,EAAIgB,iBAAkBf,OAAQC,U,0BC0FtEe,GAFSC,IAvGuC,SAAC,GAAwB,IAmDzDC,EAnDmCnB,EAAqB,EAArBA,IAAKoB,EAAgB,EAAhBA,UAC5D,EAAsBC,mBAAS,KAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA4BJ,oBAAS,GAA5BK,EAAT,oBACQpB,EAAMC,cAAND,EACFqB,EAAcC,mBAAQ,WAC1B,OAAOC,YAAiB7B,KACvB,CAACA,IAEE8B,EAAaF,mBAAQ,WACzB,OAAOG,SAASC,YAAsBhC,EAAIX,IAAI4C,MAAwB,MACrE,CAACjC,IAQIkC,EAAeC,cAAfD,WACFE,EAAYC,cACZC,EAAYC,sBAAW,sBAAC,8BAAAC,EAAA,sEAE1Bd,GAAgB,GACVe,EAASV,SAAST,GAGlBoB,EAAUC,MAAMC,MAAM,KAAM,CAAEH,WAAUI,KAAI,iBAAM,CACtDC,KAAKC,MAAMD,KAAKE,SAAWZ,GAAa,EACxCU,KAAKC,MAAMD,KAAKE,SAAWZ,GAAa,EACxCU,KAAKC,MAAMD,KAAKE,SAAWZ,GAAa,EACxCU,KAAKC,MAAMD,KAAKE,SAAWZ,GAAa,MAVhB,SAYLF,EAAWD,IAAqBgB,WAAYP,GAZvC,eAexBhB,GAAgB,GAfQ,kDAkB1BwB,QAAQC,MAAR,MAlB0B,0DAoB3B,CAACjB,EAAYR,EAAiBU,EAAWd,IAEtC8B,EAAkBb,uBAAY,WAC9Bc,OAAOvB,GAAcwB,IACvB/B,EAAO+B,IAA8BL,YAErC1B,EAAOO,EAAWmB,cAEnB,CAACnB,IAKJ,OACE,eAAC,IAAD,CAAOyB,MAAOjD,EAAE,kCAAmCc,UAAWA,EAA9D,UACE,cAAC,EAAD,CACEf,MAAOiB,EACPlB,YAAagD,EACbjD,SA9Ce,SAACqD,GAChBA,EAAEC,cAAcC,SAASC,OAC3BpC,EAAOiC,EAAEC,cAAcpD,QA6CrBL,IAAK2B,EACL1B,OAAO,SACPC,gBAAgB,UAElB,8BACE,cAACe,EAAD,UAAOX,EAAE,cAAD,OAAe2B,IAAf,UAA6C,CAAElB,IAAKkB,UAE9D,gCACE,cAAC2B,EAAD,UACGtD,EACC,4FAGJ,cAACuD,EAAD,UAAQvD,EAAE,mBAAD,QAtBKa,EAsB0BG,GArBpCH,EAASc,KAqBJ,gBAEX,eAAC6B,EAAA,EAAD,WACE,cAAC,IAAD,CAAQC,MAAM,OAAOC,QAAQ,YAAYlD,QAASM,EAAlD,SACGd,EAAE,YAEL,cAAC,IAAD,CACE2D,GAAG,uBACHF,MAAM,OACNG,SACE1C,IACC6B,OAAOc,UAAUpC,SAAST,KAC3BS,SAAST,GAAO+B,OAAOvB,IACvBC,SAAST,GAAOgC,KAChBvB,SAAST,GAAO,EAElBR,QAAO,sBAAE,sBAAA0B,EAAA,6DACPf,GAAa,GADN,SAEDa,IAFC,OAGPb,GAAa,GACbL,IAJO,2CAVX,SAiBed,EAAZkB,EAAc,uBAA4B,oBASxCpC,IAAOC,IAAV,2GAIC,SAACC,GAAD,OAAWA,EAAMC,MAAMI,OAAOC,YAGnCiE,EAAQzE,IAAOC,IAAV,+HAKA,SAACC,GAAD,OAAWA,EAAMC,MAAMI,OAAOC,WAEnCgE,EAAWxE,IAAOC,IAAV,2F,wRC9FD+E,EAAkB,WAC7B,MAA8B/C,mBAASgD,KAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAkBC,cAChBC,EAAgBC,cAAhBD,YAoBR,OAlBAE,qBAAU,WACR,IAAIC,GAAe,EAYnB,OAJIL,GAPc,uCAAG,4BAAAhC,EAAA,sEACDsC,YAAgBN,GADf,OACbO,EADa,OAEfF,GACFN,EAAW,IAAIS,IAAUD,IAHR,2CAAH,oDAQhBE,GAAeC,OAGX,WACJL,GAAe,KAEhB,CAACL,EAAiBE,IAEdJ,GAGIa,EAAgB,WAC3B,MAAsC9D,mBAASgD,KAA/C,mBAAOe,EAAP,KAAoBC,EAApB,KACA,EAAwChE,oBAAS,GAAjD,mBAAOiE,EAAP,KAAqBC,EAArB,KACQC,EAAYC,cAAZD,QACFE,EAAkBC,cAClBnB,EAAkBC,cACxB,EAAwCmB,cAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,eAyBrB,OAvBAlB,qBAAU,WACR,IAAIC,GAAe,EAiBnB,OAHIW,GAAWhB,GAAmBkB,GAbhB,uCAAG,4BAAAlD,EAAA,6DACfqC,GACFU,GAAgB,GAFC,SAICQ,YAAcvB,EAAiBkB,EAAiBF,GAJjD,cAIbQ,EAJa,OAKfnB,IACFQ,EAAeW,GACfT,GAAgB,IAPC,mBASb,WACJV,GAAe,KAVE,2CAAH,oDAchBI,GAAeC,OAEX,WACJL,GAAe,KAEhB,CAACW,EAAShB,EAAiBkB,EAAiBG,IAExC,CAAEP,eAAcF,cAAaU,mBAGzBG,EAAoB,WAC/B,MAA4C5E,mBAAS,CAAC,EAAG,EAAG,EAAG,IAA/D,mBAAO6E,EAAP,KAAuBC,EAAvB,KACM3B,EAAkBC,cAChBC,EAAgBC,cAAhBD,YAkBR,OAhBAE,qBAAU,WACR,IAAIC,GAAe,EAUnB,OAHIL,GANc,uCAAG,4BAAAhC,EAAA,sEACG4D,YAAkB5B,GADrB,OACbF,EADa,OAEfO,GACFsB,EAAkB7B,GAHD,2CAAH,oDAOhBW,GAAeC,OAEX,WACJL,GAAe,KAEhB,CAACH,EAAaF,EAAiB2B,IAE3BD,GAGIG,EAA0B,SAAC3D,GACtC,MAA8CrB,mBAAS,GAAvD,mBAAOiF,EAAP,KAAwBC,EAAxB,KACM/B,EAAkBC,cAChBC,EAAgBC,cAAhBD,YAaR,OAXAE,qBAAU,WAMJJ,GALc,uCAAG,4BAAAhC,EAAA,sEACUgE,YAAwBhC,EAAiB9B,GADnD,OACb+D,EADa,OAEnBF,EAAmBE,GAFA,2CAAH,oDAMhBxB,GAAeC,SAEhB,CAACV,EAAiB9B,EAASgC,IAEvB4B,GAGMI,IAjII,WAA2B,IAA1BC,EAAyB,uDAAT,KAClC,EAA8BtF,mBAAS,IAAvC,mBAAOuF,EAAP,KAAgBC,EAAhB,KACA,EAAoBpB,cAAZD,EAAR,EAAQA,QACFE,EAAkBC,cAClBnB,EAAkBC,cACxB,EAAwBE,cAAhBD,EAAR,EAAQA,YAkBR,OAhBAE,qBAAU,WACR,IAAIC,GAAe,EAUnB,OAHIW,GAAWhB,GAAmBkB,GANhB,uCAAG,4BAAAlD,EAAA,sEACDsE,YAAWtC,EAAiBkB,EAAiBF,EAASmB,GADrD,OACb5B,EADa,OAEfF,GACFgC,EAAW9B,GAHM,2CAAH,oDAOhBE,GAAeC,OAEX,WACJL,GAAe,KAEhB,CAACW,EAAShB,EAAiBkB,EAAiBhB,EAAaiC,IAErDC,I,iCCtCT,kCA+CeG,IAjC6B,SAAC,GAQtC,IAPL1G,EAOI,EAPJA,MACA2G,EAMI,EANJA,SAMI,IALJC,gBAKI,MALO,OAKP,MAJJC,kBAII,MAJS,IAIT,MAHJC,cAGI,MAHK,GAGL,MAFJC,YAEI,aADJC,aACI,MADI,OACJ,EACJ,EAA4BC,qBAAW,CACrCC,MAAO,EACPC,IAAKnH,EACLoH,SAAU,EACVC,UAAW,IACXV,cAEeW,IAAbX,EAAyBA,EAAW3G,EAAQ,EAAI,EAAIA,EAAQ,IAAM,EAAI,IAPlEuH,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,OAUXC,EAAcC,iBAAOF,GAM3B,OAJAjD,qBAAU,WACRkD,EAAYE,QAAQ3H,KACnB,CAACA,EAAOyH,IAGT,eAAC,IAAD,CAAMV,KAAMA,EAAMH,SAAUA,EAAUgB,MAAO,CAAEf,cAAcG,MAAOA,EAApE,UACGF,EACAS,O,oECjCQM,IANkC,SAAC5I,GAChD,OACE,cAAC,IAAD,aAAW2H,SAAS,OAAOC,WAAW,MAAMG,MAAM,aAAaF,OAAO,KAAKC,MAAM,EAAOJ,SAAU,GAAO1H,M,6FC2B9F6I,IAvBe,WAC5B,MAA8C9G,oBAAS,GAAvD,mBAAO+G,EAAP,KAAwBC,EAAxB,KACM7D,EAAkBC,cAkBxB,OAhBAG,qBAAU,WACR,IAAIC,GAAe,EACfL,GACsB,uCAAG,4BAAAhC,EAAA,sEACL8F,YAAiB9D,GADZ,OACnB+D,EADmB,OAErB1D,GACFwD,EAAmBE,GAHI,2CAAH,oDAMxBC,GAAqBtD,OAEvB,OAAM,WACJL,GAAe,KAEhB,CAACL,IAEG4D,I,mHCCHjJ,EAAeC,IAAOC,IAAV,+DACN,SAACC,GAAD,OAAWA,EAAMmJ,QAClB,SAACnJ,GAAD,OAAWA,EAAMmJ,QAGbC,EA5BuB,SAAC,GAAqB,IAGtDC,EAHqD,IAAlBF,YAAkB,MAAX,KAAW,EACjDjJ,EAAYoJ,qBAAWC,KAAvBrJ,QAGR,OAAQiJ,GACN,IAAK,KACHE,EAAInJ,EAAQ,GACZ,MACF,IAAK,KACHmJ,EAAInJ,EAAQ,GACZ,MACF,IAAK,KACL,QACEmJ,EAAInJ,EAAQ,GAGhB,OAAO,cAACL,EAAD,CAAcsJ,KAAME,KCJvBG,EAAqB1J,IAAOC,IAAV,qIAEF,SAACC,GAAD,OAAWA,EAAMC,MAAMI,OAAOoJ,eAGvC,SAACzJ,GAAD,OAAWA,EAAMC,MAAMC,QAAQ,MAGtCwJ,EAAoB5J,IAAOC,IAAV,wCAIRyE,EA1BgB,SAAC,GAAkB,IAAhBmF,EAAe,EAAfA,SAC1BC,EAAIC,IAAMC,SAASC,QAAQJ,GAAUxG,OAC3C,OACE,cAACqG,EAAD,UACGK,IAAMC,SAASvG,IAAIoG,GAAU,SAACK,EAAOC,GAAR,OAC5B,qCACE,cAACP,EAAD,UAAoBM,IACnBC,EAAIL,EAAI,GAAK,cAAC,EAAD,c,2ICEZM,E,0HAAAA,K,0BAAAA,E,kBAAAA,E,iBAAAA,M,KAMZ,IAiCaC,EAAiB,WAC5B,IAAQC,EAAgB/E,cAAhB+E,YACR,EAAsCrI,qBAAtC,mBAAOsI,EAAP,KAAoBC,EAApB,KAYA,OAVAhF,qBAAU,WAAM,4CACd,8BAAApC,EAAA,6DACQqH,EAAgBC,cADxB,SAEuBD,EAAcE,QAAQJ,cAAcK,OAF3D,OAEQC,EAFR,OAGEL,EAAe,IAAI5E,IAAUiF,IAH/B,4CADc,uBAAC,WAAD,gCAOdC,GAAmBhF,SAClB,CAACwE,IAEGC,GAGIQ,EAAmB,WAC9B,IAAQT,EAAgB/E,cAAhB+E,YACR,EAA0CrI,qBAA1C,mBAAO+I,EAAP,KAAsBC,EAAtB,KAYA,OAVAzF,qBAAU,WAAM,4CACd,8BAAApC,EAAA,6DACQ8H,EAAqBC,cAD7B,SAEsBD,EAAmBP,QAAQK,gBAAgBJ,OAFjE,OAEQ7I,EAFR,OAGEkJ,EAAiB,IAAIrF,IAAU7D,IAHjC,4CADc,uBAAC,WAAD,gCAOdqJ,GAAqBtF,SACpB,CAACwE,IAEGU,GAGIK,EAAmB,SAACC,GAC/B,MAA8BrJ,mBAASgD,KAAvC,mBAAOsG,EAAP,KAAgBC,EAAhB,KACQlB,EAAgB/E,cAAhB+E,YACFmB,EAAOC,cAYb,OAVAlG,qBAAU,YACU,uCAAG,8BAAApC,EAAA,6DACbuI,EAAWC,YAAiBN,EAAcG,GAD7B,SAEDE,EAAShB,QAAQkB,UAAU,8CAA8CjB,OAFxE,OAEbjF,EAFa,OAGnB6F,EAAW,IAAI5F,IAAUD,IAHN,2CAAH,qDAMlBE,GAAeC,SACd,CAAC2F,EAAMH,EAAchB,IAEjBiB,GAuBMO,IAzGS,SAACR,GACvB,IAAQS,EAAiC3B,EAAjC2B,YAAaC,EAAoB5B,EAApB4B,QAASC,EAAW7B,EAAX6B,OAC9B,EAAwChK,mBAA+B,CACrEsJ,QAAStG,IACTiH,YAAaH,IAFf,mBAAOI,EAAP,KAAqBC,EAArB,KAIMX,EAAOC,cACLtF,EAAYC,cAAZD,QACAd,EAAgBC,cAAhBD,YAsBR,OApBAE,qBAAU,WAeJY,GAdc,uCAAG,8BAAAhD,EAAA,6DACbuI,EAAWC,YAAiBN,EAAcG,GAD7B,kBAGCE,EAAShB,QAAQkB,UAAUzF,GAASwE,OAHrC,OAGXjF,EAHW,OAIjByG,EAAgB,CAAEb,QAAS,IAAI3F,IAAUD,GAAMuG,YAAaF,IAJ3C,gDAMjBlI,QAAQC,MAAR,MACAqI,GAAgB,SAACC,GAAD,mBAAC,eACZA,GADW,IAEdH,YAAaD,OATE,yDAAH,oDAehBpG,GAAeC,SAEhB,CAACM,EAASkF,EAAcG,EAAMnG,EAAa0G,EAASC,IAEhDE,I,seCtCIG,EAAS,uCAAG,WAAOC,EAAKC,GAAZ,+BAAApJ,EAAA,yDACjBqI,EAAOgB,cACPC,EAAQ,IAAIjB,EAAKkB,IAAIC,SAASC,EAAoCC,eAClEC,EAAM,IAAIC,IAAUT,GACtB5G,EAAM,KACN6G,EAAMnJ,OAAS,KALI,iBAMjB8G,EAAI,EANa,IAAA/G,EAAA,wCAAAA,EAAA,6DAQb6J,EAAWT,EAAMU,MAAU,IAAJ/C,EAAS,KAAOA,EAAI,IAC3CgD,EAAWF,EAASxJ,KAAI,SAACmH,GAAD,MAAU,CAACA,EAAK,GAAGwC,cAAeL,EAAIM,mBAAmBzC,EAAK,GAAIA,EAAK,QATlF,SAUU8B,EAAM/B,QAAQ2C,UAAUH,GAAUvC,OAV5C,gBAUX2C,EAVW,EAUXA,WACRpD,IACAxE,EAAMA,EAAI6H,OAAOD,EAAW9J,KAAI,SAACmH,EAAM6C,GAAP,OAAiBV,EAAIW,qBAAqBT,EAASQ,GAAO,GAAI7C,OAZ3E,sDAOdT,EAAIqC,EAAMnJ,OAAS,KAPL,iHAef8J,EAAWX,EAAM/I,KAAI,SAACmH,GAAD,MAAU,CAACA,EAAK,GAAGwC,cAAeL,EAAIM,mBAAmBzC,EAAK,GAAIA,EAAK,QAf7E,UAgBQ8B,EAAM/B,QAAQ2C,UAAUH,GAAUvC,OAhB1C,iBAgBb2C,EAhBa,EAgBbA,WACR5H,EAAM4H,EAAW9J,KAAI,SAACmH,EAAMT,GAAP,OAAa4C,EAAIW,qBAAqBlB,EAAMrC,GAAG,GAAIS,MAjBnD,iCAmBhBjF,GAnBgB,4CAAH,wDAsBTgI,EAAQ,uCAAG,WAAOvI,EAAiBwI,EAAOC,EAAazH,GAA5C,SAAAhD,EAAA,wFAEbgC,EAAgBuF,QACpBgD,SAAS,IAAI/H,IAAUgI,GAAOE,MAAMC,KAAuBlK,WAAYgK,GACvEG,KAAK,CAAEC,KAAM7H,IACb8H,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBANM,yDASbtK,QAAQC,MAAR,OATa,wDAAH,4DAaR2D,EAAU,uCAAG,WAAOtC,EAAiBkB,EAAiBF,EAASiI,GAAlD,iCAAAjL,EAAA,8DACLiL,EADK,qCACsBjJ,EAAgBuF,QAAQ2D,aAAa1D,OAD3D,iCAClB0D,EADkB,cAEHC,EAAiBjI,EAAiBF,GAF/B,cAElB/C,EAFkB,OAKlBmL,EAASjL,MAAMC,MAAM,KAAM,CAAEH,WAAuBI,KAAI,SAACL,EAAG+G,GAAJ,MAAU,CACtE7D,EAAgBmI,QAAQC,QACxB,sBACA,CAACtI,EAAS+D,OARY,UAUNmC,EAAUqC,EAAWH,GAVf,eAUlB7I,EAVkB,OAYlBiJ,EAAWjJ,EAAIlC,KAAI,SAACoB,GAAD,OAAQA,EAAGhB,cAE9BgL,EAASD,EAASnL,KAAI,SAACoB,GAAD,MAAQ,CAACyB,EAAgBmI,QAAQC,QAAS,uBAAwB,CAAC7J,OAdvE,UAeGyH,EAAUqC,EAAWE,GAfxB,eAelBC,EAfkB,OAiBlBC,EAAgB,GACtBD,EAAaE,QAAb,uCAAqB,WAAOC,EAAa9E,GAApB,SAAA/G,EAAA,sDACf,IAAIwC,IAAUqJ,GAAaC,GAAGZ,IAChCS,EAAcI,KAAKP,EAASzE,IAFX,2CAArB,yDAKMiF,EAASL,EAActL,KAAI,SAACoB,GAAD,MAAQ,CAACyB,EAAgBmI,QAAQC,QAAS,oBAAqB,CAAC7J,OAvBzE,UAwBFyH,EAAUqC,EAAWS,GAxBnB,eAwBlB5H,EAxBkB,iBA0BlB0B,EAAiB9D,GA1BC,iCA2BjBoC,GA3BiB,4CAAH,4DA8BV+G,EAAgB,uCAAG,WAAOjI,EAAiBF,GAAxB,SAAAhD,EAAA,+EACvBkD,EAAgBqE,QAAQkB,UAAUzF,GAASwE,QADpB,2CAAH,wDAIhByE,EAAU,uCAAG,WAAOjK,EAAiBkB,EAAiBF,GAAzC,iCAAAhD,EAAA,sEAClBgC,EAAgBuF,QAAQ2D,aAAa1D,OADnB,uBAEH2D,EAAiBjI,EAAiBF,GAF/B,cAElB/C,EAFkB,OAIlBmL,EAASjL,MAAMC,MAAM,KAAM,CAAEH,WAAuBI,KAAI,SAACL,EAAG+G,GAAJ,MAAU,CACtE7D,EAAgBmI,QAAQC,QACxB,sBACA,CAACtI,EAAS+D,OAPY,SASNmC,EAAUqC,EAAWH,GATf,cASlB7I,EATkB,OAUlBiJ,EAAWjJ,EAAIlC,KAAI,SAACoB,GAAD,OAAQA,EAAGhB,cAE9BgL,EAASD,EAASnL,KAAI,SAACoB,GAAD,MAAQ,CAACyB,EAAgBmI,QAAQC,QAAS,iBAAkB,CAAC7J,OAZjE,UAaIyH,EAAUqC,EAAWE,GAbzB,eAalBS,EAbkB,OAelBC,EAAeX,EAASY,QAAO,SAAC3K,EAAI4I,GAAL,OAAgB6B,EAAc7B,GAAO,MAEpE2B,EAASG,EAAa9L,KAAI,SAACoB,GAAD,MAAQ,CAACO,EAAgBqJ,QAAQC,QAAS,gBAAiB,CAAC7J,OAjBpE,UAkBFyH,EAAUmD,EAAYL,GAlBpB,eAkBlBlK,EAlBkB,OAoBpBwK,EAAgB,GACpBxK,EAAQ8J,SAAQ,SAACW,EAAGxF,GACdwF,EAAI,GACND,EAAcP,KAAKI,EAAapF,OAIhCuF,EAAcrM,OAAS,MACzBqM,EAAgBA,EAAcxC,MAAM,EAAG,MA5BjB,4BAgCf9H,EAAgBuF,QACpB0E,WAAWK,GACX1B,KAAK,CAAEC,KAAM7H,IACb8H,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBApCQ,4DAuCftK,QAAQC,MAAR,OAvCe,2DAAH,0DA2CV4C,EAAa,uCAAG,WAAOvB,EAAiBkB,EAAiBF,GAAzC,yCAAAhD,EAAA,+EAEAgC,EAAgBuF,QAAQ2D,aAAa1D,OAFrC,cAEnB0D,EAFmB,gBAGJC,EAAiBjI,EAAiBF,GAH9B,cAGnB/C,EAHmB,OAKnBmL,EAASjL,MAAMC,MAAM,KAAM,CAAEH,WAAuBI,KAAI,SAACL,EAAG+G,GAAJ,MAAU,CACtE7D,EAAgBmI,QAAQC,QACxB,sBACA,CAACtI,EAAS+D,OARa,UAUPmC,EAAUqC,EAAWH,GAVd,eAUnB7I,EAVmB,OAWnBiJ,EAAWjJ,EAAIlC,KAAI,SAACoB,GAAD,OAAQA,EAAGhB,cAC9BgL,EAASD,EAASnL,KAAI,SAACoB,GAAD,MAAQ,CAACyB,EAAgBmI,QAAQC,QAAS,uBAAwB,CAAC7J,OAZtE,UAaEyH,EAAUqC,EAAWE,GAbvB,eAanBC,EAbmB,OAcnBM,EAASR,EAASnL,KAAI,SAACoB,GAAD,MAAQ,CAACyB,EAAgBmI,QAAQC,QAAS,iBAAkB,CAAC7J,OAdhE,UAeGyH,EAAUqC,EAAWS,GAfxB,eAenBE,EAfmB,iBAiBJpG,EAAiB9D,GAjBb,eAiBnBwK,EAjBmB,OAmBnBF,EAAgB,GACtBZ,EAAaE,QAAb,uCAAqB,WAAOC,EAAa9E,GAApB,SAAA/G,EAAA,uDAEdwM,GAAUX,EAAYpL,aAAeyK,KAC9BgB,EAAcnF,GAAG,IAC3BuF,EAAcP,KAAKP,EAASzE,KAJX,2CAArB,yDAQM0F,EAASH,EAAcjM,KAAI,SAACoB,GAAD,MAAQ,CAACO,EAAgBqJ,QAAQC,QAAS,gBAAiB,CAAC7J,OA5BpE,UA8BHyH,EAAUmD,EAAYI,GA9BnB,eA8BnB3K,EA9BmB,OA+BnB0B,EAAQ1B,EAAQ4K,QAAO,SAACC,EAAGC,GAAJ,OAAUpK,IAAUqK,IAAIF,EAAGC,KAAI/K,KA/BnC,kBAiClB2B,GAjCkB,mEAqCpB3B,KArCoB,0DAAH,0DAwCbS,EAAe,uCAAG,WAAON,GAAP,eAAAhC,EAAA,sEACJgC,EAAgBuF,QAAQ2D,aAAa1D,OADjC,cACvB0D,EADuB,yBAEtBlJ,EAAgBuF,QAAQjF,gBAAgB4I,GAAY1D,QAF9B,2CAAH,sDAKfsF,EAAM,uCAAG,WAAO9K,GAAP,SAAAhC,EAAA,+EACbgC,EAAgBuF,QAAQ3H,YAAY4H,QADvB,2CAAH,sDAINuF,EAAoB,uCAAG,WAAO/K,GAAP,eAAAhC,EAAA,sEACTgC,EAAgBuF,QAAQ2D,aAAa1D,OAD5B,cAC5B0D,EAD4B,yBAE3BA,GAF2B,2CAAH,sDAKpBpF,EAAgB,uCAAG,WAAO9D,GAAP,SAAAhC,EAAA,+EACvBgC,EAAgBuF,QAAQiF,SAAShF,QADV,2CAAH,sDAIhBxD,EAAuB,uCAAG,WAAOhC,EAAiBgL,GAAxB,iBAAAhN,EAAA,sEACdgC,EAAgBuF,QAAQ2D,aAAa1D,OADvB,cACjC0D,EADiC,gBAEhBlJ,EAAgBuF,QAAQiF,SAAShF,OAFjB,uBAInC0D,GAAc,GAJqB,mBAOdlJ,EAAgBuF,QAAQ0F,cAAc/B,EAAY,EAAI8B,GAAaxF,OAPrD,eAO7B7I,EAP6B,yBAS5B,IAAI6D,IAAU7D,GAAQ9B,IAAI8N,KAAuB9N,IAAI4C,KAAsByN,YAT/C,kCAWnCxM,QAAQC,MAAR,MAXmC,iCAa9B,GAb8B,0DAAH,wDAgBvBiD,EAAiB,uCAAG,WAAO5B,GAAP,uBAAAhC,EAAA,sEACNgC,EAAgBuF,QAAQ2D,aAAa1D,OAD/B,cACzB0D,EADyB,OAEzBhL,EAAU,GAFe,SAGV8B,EAAgBuF,QAAQiF,SAAShF,OAHvB,WAGzBgF,EAHyB,SAKa,IAA7BjN,SAAS2L,EAAY,IALL,yCAMtB,CAAC,EAAG,EAAG,EAAG,IANY,UAQ1BsB,EAR0B,iBASpBzF,EAAI,EATgB,aASbA,EAAI,GATS,6BAU3B7G,EAV2B,UAUN8B,EAAgBuF,QAAQ4F,eAAejC,EAAa,EAAGnE,GAAGS,OAVpD,qBAU4D/G,WAV5D,KAUnBsL,KAVmB,wBASNhF,IATM,gDAapBA,EAAI,EAbgB,aAabA,EAAI,GAbS,6BAc3B7G,EAd2B,UAcN8B,EAAgBuF,QAAQ7D,eAAeqD,GAAGS,OAdpC,qBAc4C/G,WAd5C,KAcnBsL,KAdmB,wBAaNhF,IAbM,iDAiBxB7G,GAjBwB,4CAAH,uD,2MCjMjBkN,EAAuB,WAClC,IAAQpK,EAAYC,cAAZD,QACFhB,EAAkBC,cAClBoL,EAAwBlK,cAW9B,MAAO,CAAEmK,aATWvN,sBAAW,sBAAC,4BAAAC,EAAA,+EAEPiM,YAAWjK,EAAiBqL,EAAuBrK,GAF5C,cAEtBuK,EAFsB,yBAGrBA,GAHqB,0DAKrB,GALqB,yDAO7B,CAACvK,EAAShB,EAAiBqL,MAKnB1N,EAAqB,WAChC,IAAQqD,EAAYC,cAAZD,QACFhB,EAAkBC,cAcxB,MAAO,CAAEvC,WAZSK,sBAAW,uCAC3B,WAAOpB,EAAgBuB,GAAvB,eAAAF,EAAA,+EAEyBuK,YAASvI,EAAiBrD,EAAQuB,EAAS8C,GAFpE,cAEUuK,EAFV,yBAGWA,GAHX,0DAKW,GALX,yDAD2B,wDAS3B,CAACvK,EAAShB,MAMDnC,EAAe,WAC1B,MAAsBhB,mBAAS,GAA/B,mBAAOrB,EAAP,KAAYgQ,EAAZ,KACMxL,EAAkBC,cAElBwL,EAAW1N,sBAAW,sBAAC,4BAAAC,EAAA,sEACH8M,YAAO9K,GADJ,OACrBpC,EADqB,OAE3B4N,EAAO5N,GAFoB,2CAG1B,CAACoC,IAQJ,OANAI,qBAAU,WACJJ,GACFyL,IAAW/K,SAEZ,CAACV,EAAiByL,IAEdjQ,I,wKC9CIkQ,EAAsB,WACjC,MAAkC7O,mBAASgD,KAA3C,mBAAO8L,EAAP,KAAkBC,EAAlB,KACQ5K,EAAYC,cAAZD,QACFqE,EAAgBwG,cACd3L,EAAgBC,cAAhBD,YAmBR,OAjBAE,qBAAU,WACR,IAAIC,GAAe,EAWnB,OAHIW,GAPgB,uCAAG,4BAAAhD,EAAA,sEACHqH,EAAcE,QAAQoG,UAAU3K,EAAS8K,eAAqBtG,OAD3D,OACfjF,EADe,OAEjBF,GACFuL,EAAa,IAAIpL,IAAUD,IAHR,2CAAH,oDAQlBwL,GAAiBrL,OAEb,WACJL,GAAe,KAEhB,CAACW,EAASqE,EAAenF,IAErByL,I,uHC9BIK,EAAc,SAACC,GAC1B,MAAkDpP,oBAAS,GAA3D,mBAAOqP,EAAP,KAA0BC,EAA1B,KACQC,EAAcC,cAAdD,UAgBR,MAAO,CAAEE,cAdavO,sBAAW,sBAAC,sBAAAC,EAAA,sEAE9BmO,GAAqB,GAFS,SAGTC,IAHS,eAM5BD,GAAqB,GAEvBF,IAR8B,gDAU9BvN,QAAQC,MAAR,MAV8B,yDAY/B,CAACyN,EAAWH,IAESC,uB,4FCUpBK,EAAc3R,IAAOC,IAAV,2GAIN,SAACC,GAAD,OAAWA,EAAMC,MAAMI,OAAOC,WAG1BoR,IAhC4C,SAAC,GAAmB,IAAjB5P,EAAgB,EAAhBA,UACpDd,EAAMC,cAAND,EAER,OACE,eAAC,IAAD,CAAOiD,MAAOjD,EAAE,WAAYc,UAAWA,EAAvC,UACE,eAAC2P,EAAD,WACGzQ,EAAE,uCACH,uBACCA,EAAE,6EACH,uBACCA,EAAE,mFACH,uBACCA,EACC,sHAGJ,cAAC,IAAD,UACE,cAAC,IAAD,CAAQyD,MAAM,OAAOjD,QAASM,EAA9B,SACGd,EAAE","file":"static/js/0.8a9844a3.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Flex, Input, InputProps } from '@wagyu-swap-libs/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string\r\n  symbol: string\r\n  availableSymbol: string\r\n  value: string\r\n  onSelectMax?: () => void\r\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\r\n}\r\n\r\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <>\r\n      <Flex alignItems=\"center\">\r\n        <Input type=\"number\" inputMode=\"numeric\" min=\"0\" onChange={onChange} placeholder=\"0\" value={value} />\r\n        <StyledTokenAdornmentWrapper>\r\n          <StyledSpacer />\r\n          <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\r\n          <StyledSpacer />\r\n          <Button scale=\"sm\" onClick={onSelectMax}>\r\n            {t('Max')}\r\n          </Button>\r\n        </StyledTokenAdornmentWrapper>\r\n      </Flex>\r\n      <StyledMaxText>\r\n        {t('%num% %symbol% Available', { num: max.toLocaleString(), symbol: availableSymbol })}\r\n      </StyledMaxText>\r\n    </>\r\n  )\r\n}\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n`\r\n\r\nconst StyledTokenSymbol = styled.span`\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-weight: 700;\r\n`\r\n\r\nexport default TicketInput\r\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Modal } from '@wagyu-swap-libs/uikit'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport TicketInput from 'components/TicketInput'\nimport ModalActions from 'components/ModalActions'\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\nimport { useTranslation } from 'contexts/Localization'\nimport { LOTTERY_MAX_NUMBER_OF_TICKETS, LOTTERY_TICKET_PRICE } from 'config'\n\ninterface BuyTicketModalProps {\n  max: BigNumber\n  onDismiss?: () => void\n}\n\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\n  const [val, setVal] = useState('1')\n  const [pendingTx, setPendingTx] = useState(false)\n  const [, setRequestedBuy] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getBalanceNumber(max)\n  }, [max])\n\n  const maxTickets = useMemo(() => {\n    return parseInt(getFullDisplayBalance(max.div(LOTTERY_TICKET_PRICE)), 10)\n  }, [max])\n\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => {\n    if (e.currentTarget.validity.valid) {\n      setVal(e.currentTarget.value)\n    }\n  }\n\n  const { onMultiBuy } = useMultiBuyLottery()\n  const maxNumber = useMaxNumber()\n  const handleBuy = useCallback(async () => {\n    try {\n      setRequestedBuy(true)\n      const length = parseInt(val)\n      // @ts-ignore\n      // eslint-disable-next-line prefer-spread\n      const numbers = Array.apply(null, { length }).map(() => [\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n      ])\n      const txHash = await onMultiBuy(LOTTERY_TICKET_PRICE.toString(), numbers)\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedBuy(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val])\n\n  const handleSelectMax = useCallback(() => {\n    if (Number(maxTickets) > LOTTERY_MAX_NUMBER_OF_TICKETS) {\n      setVal(LOTTERY_MAX_NUMBER_OF_TICKETS.toString())\n    } else {\n      setVal(maxTickets.toString())\n    }\n  }, [maxTickets])\n\n  const wagyuCosts = (amount: string): number => {\n    return +amount * LOTTERY_TICKET_PRICE\n  }\n  return (\n    <Modal title={t('Enter amount of tickets to buy')} onDismiss={onDismiss}>\n      <TicketInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol=\"TICKET\"\n        availableSymbol=\"WAGYU\"\n      />\n      <div>\n        <Tips>{t(`1 Ticket = ${LOTTERY_TICKET_PRICE} WAGYU`, { num: LOTTERY_TICKET_PRICE })}</Tips>\n      </div>\n      <div>\n        <Announce>\n          {t(\n            'Ticket purchases are final. Your WAGYU cannot be returned to you after buying tickets.',\n          )}\n        </Announce>\n        <Final>{t(`You will spend: ${wagyuCosts(val)} WAGYU`)}</Final>\n      </div>\n      <ModalActions>\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          id=\"lottery-buy-complete\"\n          width=\"100%\"\n          disabled={\n            pendingTx ||\n            !Number.isInteger(parseInt(val)) ||\n            parseInt(val) > Number(maxTickets) ||\n            parseInt(val) > LOTTERY_MAX_NUMBER_OF_TICKETS ||\n            parseInt(val) < 1\n          }\n          onClick={async () => {\n            setPendingTx(true)\n            await handleBuy()\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default BuyTicketModal\n\nconst Tips = styled.div`\n  margin-left: 0.4em;\n  font-size: 14px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst Final = styled.div`\n  margin-top: 1em;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\nconst Announce = styled.div`\n  margin-top: 1em;\n  margin-left: 0.4em;\n  color: #ed4b9e;\n`\n","import { useCallback, useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport useRefresh from './useRefresh'\r\nimport {\r\n  getTotalRewards,\r\n  getTotalClaim,\r\n  getMatchingRewardLength,\r\n  getWinningNumbers,\r\n  getTickets,\r\n} from '../utils/lotteryUtils'\r\nimport useLastUpdated from './useLastUpdated'\r\n\r\nconst useTickets = (lotteryNumber = null) => {\r\n  const [tickets, setTickets] = useState([])\r\n  const { account } = useWeb3React()\r\n  const ticketsContract = useLotteryTicket()\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    let isSubscribed = true;\r\n    const fetchBalance = async () => {\r\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\r\n      if (isSubscribed) {\r\n        setTickets(res)\r\n      }\r\n    }\r\n    if (account && lotteryContract && ticketsContract) {\r\n      fetchBalance().then()\r\n    }\r\n    return() => {\r\n      isSubscribed = false\r\n    }\r\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\r\n\r\n  return tickets\r\n}\r\n\r\nexport const useTotalRewards = () => {\r\n  const [rewards, setRewards] = useState(BIG_ZERO)\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    let isSubscribed = true;\r\n    const fetchBalance = async () => {\r\n      const res = await getTotalRewards(lotteryContract)\r\n      if (isSubscribed) {\r\n        setRewards(new BigNumber(res))\r\n      }\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance().then()\r\n    }\r\n\r\n    return() => {\r\n      isSubscribed = false;\r\n    }\r\n  }, [lotteryContract, fastRefresh])\r\n\r\n  return rewards\r\n}\r\n\r\nexport const useTotalClaim = () => {\r\n  const [claimAmount, setClaimAmount] = useState(BIG_ZERO)\r\n  const [claimLoading, setClaimLoading] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const ticketsContract = useLotteryTicket()\r\n  const lotteryContract = useLottery()\r\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\r\n\r\n  useEffect(() => {\r\n    let isSubscribed = true;\r\n    const fetchBalance = async () => {\r\n      if (isSubscribed) {\r\n        setClaimLoading(true)\r\n      }\r\n      const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\r\n      if (isSubscribed) {\r\n        setClaimAmount(claim)\r\n        setClaimLoading(false)\r\n      }\r\n      return() => {\r\n        isSubscribed = false;\r\n      }\r\n    };\r\n    if (account && lotteryContract && ticketsContract) {\r\n      fetchBalance().then()\r\n    }\r\n    return() => {\r\n      isSubscribed = false;\r\n    }\r\n  }, [account, lotteryContract, ticketsContract, lastUpdated])\r\n\r\n  return { claimLoading, claimAmount, setLastUpdated }\r\n}\r\n\r\nexport const useWinningNumbers = () => {\r\n  const [winningNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    let isSubscribed = true;\r\n    const fetchBalance = async () => {\r\n      const rewards = await getWinningNumbers(lotteryContract)\r\n      if (isSubscribed) {\r\n        setWinningNumbers(rewards)\r\n      }\r\n    }\r\n    if (lotteryContract) {\r\n      fetchBalance().then()\r\n    }\r\n    return() => {\r\n      isSubscribed = false\r\n    }\r\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\r\n\r\n  return winningNumbers\r\n}\r\n\r\nexport const useMatchingRewardLength = (numbers) => {\r\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const matchedNumbers = await getMatchingRewardLength(lotteryContract, numbers)\r\n      setMatchingNumbers(matchedNumbers)\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance().then()\r\n    }\r\n  }, [lotteryContract, numbers, fastRefresh])\r\n\r\n  return matchingNumbers\r\n}\r\n\r\nexport default useTickets\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useCountUp } from 'react-countup'\r\nimport { Text } from '@wagyu-swap-libs/uikit'\r\n\r\nexport interface CardValueProps {\r\n  value: number\r\n  decimals?: number\r\n  fontSize?: string\r\n  lineHeight?: string\r\n  prefix?: string\r\n  bold?: boolean\r\n  color?: string\r\n}\r\n\r\nconst CardValue: React.FC<CardValueProps> = ({\r\n  value,\r\n  decimals,\r\n  fontSize = '40px',\r\n  lineHeight = '1',\r\n  prefix = '',\r\n  bold = true,\r\n  color = 'text',\r\n}) => {\r\n  const { countUp, update } = useCountUp({\r\n    start: 0,\r\n    end: value,\r\n    duration: 1,\r\n    separator: ',',\r\n    decimals:\r\n      // eslint-disable-next-line no-nested-ternary\r\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\r\n  })\r\n\r\n  const updateValue = useRef(update)\r\n\r\n  useEffect(() => {\r\n    updateValue.current(value)\r\n  }, [value, updateValue])\r\n\r\n  return (\r\n    <Text bold={bold} fontSize={fontSize} style={{ lineHeight }} color={color}>\r\n      {prefix}\r\n      {countUp}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default CardValue\r\n","import React from 'react'\r\nimport CardValue, { CardValueProps } from './CardValue'\r\n\r\nconst CardVusdtValue: React.FC<CardValueProps> = (props) => {\r\n  return (\r\n    <CardValue fontSize=\"14px\" lineHeight=\"1.1\" color=\"textSubtle\" prefix=\"~$\" bold={false} decimals={2} {...props} />\r\n  )\r\n}\r\n\r\nexport default CardVusdtValue\r\n","import { useEffect, useState } from 'react'\r\nimport { useLottery } from 'hooks/useContract'\r\nimport { getLotteryStatus } from 'utils/lotteryUtils'\r\n\r\n/**\r\n * Returns whether or not the current lottery has drawn numbers\r\n *\r\n * @return {Boolean}\r\n */\r\nconst useGetLotteryHasDrawn = () => {\r\n  const [lotteryHasDrawn, setLotteryHasDrawn] = useState(true)\r\n  const lotteryContract = useLottery()\r\n\r\n  useEffect(() => {\r\n    let isSubscribed = true;\r\n    if (lotteryContract) {\r\n      const fetchLotteryStatus = async () => {\r\n        const state = await getLotteryStatus(lotteryContract)\r\n        if (isSubscribed) {\r\n          setLotteryHasDrawn(state)\r\n        }\r\n      }\r\n      fetchLotteryStatus().then()\r\n    }\r\n    return() => {\r\n      isSubscribed = false;\r\n    }\r\n  }, [lotteryContract])\r\n\r\n  return lotteryHasDrawn\r\n}\r\n\r\nexport default useGetLotteryHasDrawn\r\n","import React, { useContext } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg'\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext)\r\n\r\n  let s: number\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6]\r\n      break\r\n    case 'sm':\r\n      s = spacing[2]\r\n      break\r\n    case 'md':\r\n    default:\r\n      s = spacing[4]\r\n  }\r\n\r\n  return <StyledSpacer size={s} />\r\n}\r\n\r\ninterface StyledSpacerProps {\r\n  size: number\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`\r\n\r\nexport default Spacer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Spacer from '../Spacer'\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <Spacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  )\r\n}\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\r\n  display: flex;\r\n  margin: 0;\r\n  padding: ${(props) => props.theme.spacing[4]}px 0;\r\n`\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n`\r\n\r\nexport default ModalActions\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getMasterchefContract, getVls20Contract, getWagyuContract } from 'utils/contractHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport useWeb3 from './useWeb3'\r\nimport useRefresh from './useRefresh'\r\nimport useLastUpdated from './useLastUpdated'\r\n\r\ntype UseTokenBalanceState = {\r\n  balance: BigNumber\r\n  fetchStatus: FetchStatus\r\n}\r\n\r\nexport enum FetchStatus {\r\n  NOT_FETCHED = 'not-fetched',\r\n  SUCCESS = 'success',\r\n  FAILED = 'failed',\r\n}\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\r\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\r\n    balance: BIG_ZERO,\r\n    fetchStatus: NOT_FETCHED,\r\n  })\r\n  const web3 = useWeb3()\r\n  const { account } = useWeb3React()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getVls20Contract(tokenAddress, web3)\r\n      try {\r\n        const res = await contract.methods.balanceOf(account).call()\r\n        setBalanceState({ balance: new BigNumber(res), fetchStatus: SUCCESS })\r\n      } catch (e) {\r\n        console.error(e)\r\n        setBalanceState((prev) => ({\r\n          ...prev,\r\n          fetchStatus: FAILED,\r\n        }))\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance().then()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh, SUCCESS, FAILED])\r\n\r\n  return balanceState\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const wagyuContract = getWagyuContract()\r\n      const supply = await wagyuContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply().then()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useWagyuPerBlock = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [wagyuPerBlock, setWagyuPerBlock] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchWagyuPerBlock() {\r\n      const masterChefContract = getMasterchefContract()\r\n      const amount= await masterChefContract.methods.wagyuPerBlock().call()\r\n      setWagyuPerBlock(new BigNumber(amount))\r\n    }\r\n\r\n    fetchWagyuPerBlock().then()\r\n  }, [slowRefresh])\r\n\r\n  return wagyuPerBlock\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(BIG_ZERO)\r\n  const { slowRefresh } = useRefresh()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getVls20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    fetchBalance().then()\r\n  }, [web3, tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useGetVlxBalance = () => {\r\n  const [balance, setBalance] = useState(BIG_ZERO)\r\n  const { account } = useWeb3React()\r\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const walletBalance = await web3.eth.getBalance(account)\r\n      setBalance(new BigNumber(walletBalance))\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance().then()\r\n    }\r\n  }, [account, web3, lastUpdated, setBalance])\r\n\r\n  return { balance, refresh: setLastUpdated }\r\n}\r\n\r\nexport default useTokenBalance\r\n","/* eslint-disable no-await-in-loop */\r\nimport BigNumber from 'bignumber.js'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport ticketAbi from 'config/abi/lotteryNft.json'\r\nimport lotteryAbi from 'config/abi/lottery.json'\r\nimport { DEFAULT_TOKEN_DECIMAL, LOTTERY_TICKET_PRICE } from 'config'\r\nimport { AbiItem } from 'web3-utils'\r\nimport { getMulticallAddress } from './addressHelpers'\r\nimport { BIG_ZERO } from './bigNumber'\r\n\r\nexport const multiCall = async (abi, calls) => {\r\n  const web3 = getWeb3NoAccount()\r\n  const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress())\r\n  const itf = new Interface(abi)\r\n  let res = []\r\n  if (calls.length > 100) {\r\n    let i = 0\r\n    while (i < calls.length / 100) {\r\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\r\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\r\n      const { returnData } = await multi.methods.aggregate(calldata).call()\r\n      i++\r\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\r\n    }\r\n  } else {\r\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\r\n    const { returnData } = await multi.methods.aggregate(calldata).call()\r\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\r\n  }\r\n  return res\r\n}\r\n\r\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\r\n  try {\r\n    return lotteryContract.methods\r\n      .multiBuy(new BigNumber(price).times(DEFAULT_TOKEN_DECIMAL).toString(), numbersList)\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  } catch (err) {\r\n    return console.error(err)\r\n  }\r\n}\r\n\r\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\r\n  const issueIndex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\r\n  const length = await getTicketsAmount(ticketsContract, account)\r\n\r\n  // eslint-disable-next-line prefer-spread\r\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\r\n    ticketsContract.options.address,\r\n    'tokenOfOwnerByIndex',\r\n    [account, i],\r\n  ])\r\n  const res = await multiCall(ticketAbi, calls1)\r\n\r\n  const tokenIds = res.map((id) => id.toString())\r\n\r\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\r\n  const ticketIssues = await multiCall(ticketAbi, calls2)\r\n\r\n  const finalTokenids = []\r\n  ticketIssues.forEach(async (ticketIssue, i) => {\r\n    if (new BigNumber(ticketIssue).eq(issueIndex)) {\r\n      finalTokenids.push(tokenIds[i])\r\n    }\r\n  })\r\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\r\n  const tickets = await multiCall(ticketAbi, calls3)\r\n\r\n  await getLotteryStatus(lotteryContract)\r\n  return tickets\r\n}\r\n\r\nexport const getTicketsAmount = async (ticketsContract, account) => {\r\n  return ticketsContract.methods.balanceOf(account).call()\r\n}\r\n\r\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\r\n  await lotteryContract.methods.issueIndex().call()\r\n  const length = await getTicketsAmount(ticketsContract, account)\r\n  // eslint-disable-next-line prefer-spread\r\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\r\n    ticketsContract.options.address,\r\n    'tokenOfOwnerByIndex',\r\n    [account, i],\r\n  ])\r\n  const res = await multiCall(ticketAbi, calls1)\r\n  const tokenIds = res.map((id) => id.toString())\r\n\r\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\r\n  const claimedStatus = await multiCall(ticketAbi, calls2)\r\n\r\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\r\n\r\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\r\n  const rewards = await multiCall(lotteryAbi, calls3)\r\n\r\n  let finalTokenIds = []\r\n  rewards.forEach((r, i) => {\r\n    if (r > 0) {\r\n      finalTokenIds.push(unClaimedIds[i])\r\n    }\r\n  })\r\n\r\n  if (finalTokenIds.length > 200) {\r\n    finalTokenIds = finalTokenIds.slice(0, 200)\r\n  }\r\n\r\n  try {\r\n    return lotteryContract.methods\r\n      .multiClaim(finalTokenIds)\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  } catch (err) {\r\n    return console.error(err)\r\n  }\r\n}\r\n\r\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\r\n  try {\r\n    const issueIndex = await lotteryContract.methods.issueIndex().call()\r\n    const length = await getTicketsAmount(ticketsContract, account)\r\n    // eslint-disable-next-line prefer-spread\r\n    const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\r\n      ticketsContract.options.address,\r\n      'tokenOfOwnerByIndex',\r\n      [account, i],\r\n    ])\r\n    const res = await multiCall(ticketAbi, calls1)\r\n    const tokenIds = res.map((id) => id.toString())\r\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\r\n    const ticketIssues = await multiCall(ticketAbi, calls2)\r\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\r\n    const claimedStatus = await multiCall(ticketAbi, calls3)\r\n\r\n    const drawed = await getLotteryStatus(lotteryContract)\r\n\r\n    const finalTokenIds = []\r\n    ticketIssues.forEach(async (ticketIssue, i) => {\r\n      // eslint-disable-next-line no-empty\r\n      if (!drawed && ticketIssue.toString() === issueIndex) {\r\n      } else if (!claimedStatus[i][0]) {\r\n        finalTokenIds.push(tokenIds[i])\r\n      }\r\n    })\r\n\r\n    const calls4 = finalTokenIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\r\n\r\n    const rewards = await multiCall(lotteryAbi, calls4)\r\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), BIG_ZERO)\r\n\r\n    return claim\r\n  } catch (err) {\r\n    // console.error(err)\r\n  }\r\n  return BIG_ZERO\r\n}\r\n\r\nexport const getTotalRewards = async (lotteryContract) => {\r\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\r\n  return lotteryContract.methods.getTotalRewards(issueIndex).call()\r\n}\r\n\r\nexport const getMax = async (lotteryContract) => {\r\n  return lotteryContract.methods.maxNumber().call()\r\n}\r\n\r\nexport const getLotteryIssueIndex = async (lotteryContract) => {\r\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\r\n  return issueIndex\r\n}\r\n\r\nexport const getLotteryStatus = async (lotteryContract) => {\r\n  return lotteryContract.methods.drawed().call()\r\n}\r\n\r\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\r\n  let issueIndex = await lotteryContract.methods.issueIndex().call()\r\n  const drawed = await lotteryContract.methods.drawed().call()\r\n  if (!drawed) {\r\n    issueIndex -= 1\r\n  }\r\n  try {\r\n    const amount = await lotteryContract.methods.historyAmount(issueIndex, 5 - matchNumber).call()\r\n\r\n    return new BigNumber(amount).div(DEFAULT_TOKEN_DECIMAL).div(LOTTERY_TICKET_PRICE).toNumber()\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n  return 0\r\n}\r\n\r\nexport const getWinningNumbers = async (lotteryContract) => {\r\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\r\n  const numbers = []\r\n  const drawed = await lotteryContract.methods.drawed().call()\r\n\r\n  if (!drawed && parseInt(issueIndex, 10) === 0) {\r\n    return [0, 0, 0, 0]\r\n  }\r\n  if (!drawed) {\r\n    for (let i = 0; i < 4; i++) {\r\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIndex - 1, i).call()).toString())\r\n    }\r\n  } else {\r\n    for (let i = 0; i < 4; i++) {\r\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\r\n    }\r\n  }\r\n  return numbers\r\n}\r\n","import { useCallback, useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\r\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\r\n\r\nexport const useMultiClaimLottery = () => {\r\n  const { account } = useWeb3React()\r\n  const lotteryContract = useLottery()\r\n  const lotteryTicketContract = useLotteryTicket()\r\n\r\n  const handleClaim = useCallback(async () => {\r\n    try {\r\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\r\n      return txHash\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, lotteryContract, lotteryTicketContract])\r\n\r\n  return { onMultiClaim: handleClaim }\r\n}\r\n\r\nexport const useMultiBuyLottery = () => {\r\n  const { account } = useWeb3React()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleBuy = useCallback(\r\n    async (amount: string, numbers: Array<any>) => {\r\n      try {\r\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\r\n        return txHash\r\n      } catch (e) {\r\n        return false\r\n      }\r\n    },\r\n    [account, lotteryContract],\r\n  )\r\n\r\n  return { onMultiBuy: handleBuy }\r\n}\r\n\r\nexport const useMaxNumber = () => {\r\n  const [max, setMax] = useState(5)\r\n  const lotteryContract = useLottery()\r\n\r\n  const fetchMax = useCallback(async () => {\r\n    const maxNumber = await getMax(lotteryContract)\r\n    setMax(maxNumber)\r\n  }, [lotteryContract])\r\n\r\n  useEffect(() => {\r\n    if (lotteryContract) {\r\n      fetchMax().then()\r\n    }\r\n  }, [lotteryContract, fetchMax])\r\n\r\n  return max\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { getLotteryAddress } from 'utils/addressHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { useWagyu } from './useContract'\r\nimport useRefresh from './useRefresh'\r\n\r\n// Retrieve lottery allowance\r\nexport const useLotteryAllowance = () => {\r\n  const [allowance, setAllowance] = useState(BIG_ZERO)\r\n  const { account } = useWeb3React()\r\n  const wagyuContract = useWagyu()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    let isSubscribed = true;\r\n    const fetchAllowance = async () => {\r\n      const res = await wagyuContract.methods.allowance(account, getLotteryAddress()).call()\r\n      if (isSubscribed) {\r\n        setAllowance(new BigNumber(res))\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchAllowance().then()\r\n    }\r\n    return() => {\r\n      isSubscribed = false\r\n    }\r\n  }, [account, wagyuContract, fastRefresh])\r\n\r\n  return allowance\r\n}\r\n\r\n// Retrieve IFO allowance\r\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any): BigNumber => {\r\n  const { account } = useWeb3React()\r\n  const [allowance, setAllowance] = useState(BIG_ZERO)\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\r\n        setAllowance(new BigNumber(res))\r\n      } catch (e) {\r\n        console.error(e)\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetch().then()\r\n    }\r\n  }, [account, spenderAddress, tokenContract, dependency])\r\n\r\n  return allowance\r\n}\r\n","import { useCallback, useState } from 'react'\r\nimport { useLotteryApprove } from './useApprove'\r\n\r\nexport const useApproval = (onPresentApprove: () => void) => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { onApprove } = useLotteryApprove()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const txHash = await onApprove()\r\n      // user rejected tx or didn't go thru\r\n      if (!txHash) {\r\n        setRequestedApproval(false)\r\n      }\r\n      onPresentApprove()\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, onPresentApprove])\r\n\r\n  return { handleApprove, requestedApproval }\r\n}\r\n\r\nexport default useApproval\r\n","import React from 'react'\nimport { Button, Modal } from '@wagyu-swap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Modal title={t('Warning')} onDismiss={onDismiss}>\n      <TicketsList>\n        {t('Lottery ticket purchases are final.')}\n        <br />\n        {t('Your WAGYU will not be returned to you after you spend it to buy tickets.')}\n        <br />\n        {t('Tickets are only valid for one lottery draw, and will be burned after the draw.')}\n        <br />\n        {t(\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\n        )}\n      </TicketsList>\n      <ModalActions>\n        <Button width=\"100%\" onClick={onDismiss}>\n          {t('I understand')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nconst TicketsList = styled.div`\n  text-align: left;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nexport default WarningModal\n"],"sourceRoot":""}